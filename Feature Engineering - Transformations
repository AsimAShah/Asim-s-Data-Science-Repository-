Transformation of Features


Normalization And Standardization
Scaling to Minimum And Maximum values
Scaling To Median And Quantiles
Guassian Transformation
Logarithmic Transformation
Reciprocal Trnasformation
Square Root Transformation
Exponential Trnasformation
Box Cox Transformation
Standardization(Why standardization?)

Standardization comes into picture when features of input data set have large differences between their ranges, or simply when they are measured in different measurement units (e.g., Pounds, Meters, Miles … etc).

We try to bring all the variables or features to a similar scale. standarisation means centering the variable at zero. z=(x-x_mean)/std

In [1]:
import pandas as pd
df=pd.read_csv('titanic.csv', usecols=['Pclass','Age','Fare','Survived'])
df.head()
Out[1]:
Survived	Pclass	Age	Fare
0	0	3	22.0	7.2500
1	1	1	38.0	71.2833
2	1	3	26.0	7.9250
3	1	1	35.0	53.1000
4	0	3	35.0	8.0500
In [2]:
df['Age'].fillna(df.Age.median(),inplace=True)
In [3]:
df.isnull().sum()
Out[3]:
Survived    0
Pclass      0
Age         0
Fare        0
dtype: int64
In [4]:
### Independent and dependent features
X=df.iloc[:,1:]
y=df.iloc[:,0]
In [5]:
X
Out[5]:
Pclass	Age	Fare
0	3	22.0	7.2500
1	1	38.0	71.2833
2	3	26.0	7.9250
3	1	35.0	53.1000
4	3	35.0	8.0500
...	...	...	...
886	2	27.0	13.0000
887	1	19.0	30.0000
888	3	28.0	23.4500
889	1	26.0	30.0000
890	3	32.0	7.7500
891 rows × 3 columns

In [6]:
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)
In [7]:
X_train
Out[7]:
Pclass	Age	Fare
6	1	54.0	51.8625
718	3	28.0	15.5000
685	2	25.0	41.5792
73	3	26.0	14.4542
882	3	22.0	10.5167
...	...	...	...
106	3	21.0	7.6500
270	1	28.0	31.0000
860	3	41.0	14.1083
435	1	14.0	120.0000
102	1	21.0	77.2875
596 rows × 3 columns

In [8]:
#### standarisation: We use the Standardscaler from sklearn library
from sklearn.preprocessing import StandardScaler
In [9]:
scaler=StandardScaler()
### fit vs fit_transform
X_train_scaled=scaler.fit_transform(X_train)
In [10]:
X_train_scaled
Out[10]:
array([[-1.62580285,  1.91349292,  0.38784185],
       [ 0.80576177, -0.09452019, -0.31908053],
       [-0.41002054, -0.32621401,  0.18792449],
       ...,
       [ 0.80576177,  0.90948636, -0.34613654],
       [-1.62580285, -1.17575802,  1.71250117],
       [-1.62580285, -0.63513911,  0.8821286 ]])
In [11]:
X_test_scaled=scaler.transform(X_test)
In [12]:
X_test_scaled
Out[12]:
array([[ 0.80576177, -0.09452019, -0.32402243],
       [-0.41002054,  0.13717363, -0.4162854 ],
       [ 0.80576177, -0.71237038, -0.46634591],
       [-0.41002054, -1.79360821,  0.0211365 ],
       [ 0.80576177, -1.17575802, -0.40186603],
       [-1.62580285, -0.24898274,  0.91250512],
       [ 0.80576177, -0.09452019, -0.46974808],
       [ 0.80576177, -1.02129548, -0.2704781 ],
       [ 0.80576177, -1.02129548, -0.46974808],
       [-1.62580285, -0.78960166, -0.10944269],
       [-1.62580285,  0.60056127,  0.41190006],
       [ 0.80576177,  1.14118018, -0.46391578],
       [ 0.80576177, -0.09452019, -0.12531819],
       [ 0.80576177,  0.05994235, -0.47995459],
       [-0.41002054,  0.52332999, -0.36768297],
       [-1.62580285, -1.02129548,  0.14555873],
       [-1.62580285,  0.98671764,  0.40128918],
       [ 0.80576177, -0.09452019, -0.46820835],
       [-0.41002054, -0.17175147, -0.36768297],
       [-1.62580285,  1.372874  ,  0.39051499],
       [ 0.80576177, -0.40344529, -0.46691358],
       [-1.62580285,  0.36886745, -0.10425778],
       [ 0.80576177, -0.78960166, -0.46772233],
       [ 0.80576177, -0.71237038, -0.44107264],
       [ 0.80576177, -0.09452019, -0.33852151],
       [ 0.80576177, -1.48468312, -0.07801247],
       [-1.62580285,  0.83225509, -0.08149629],
       [-0.41002054,  0.13717363, -0.36768297],
       [ 0.80576177, -1.94807076, -0.07801247],
       [ 0.80576177,  0.13717363, -0.46772233],
       [ 0.80576177, -0.78960166, -0.46691358],
       [ 0.80576177, -0.55790784, -0.46974808],
       [-1.62580285, -0.09452019, -0.02365939],
       [ 0.80576177, -0.09452019, -0.47363627],
       [ 0.80576177, -0.86683293, -0.46391578],
       [ 0.80576177, -0.17175147, -0.3394119 ],
       [-1.62580285, -0.09452019,  0.06973893],
       [ 0.80576177, -0.09452019, -0.46974808],
       [-1.62580285,  0.05994235, -0.01774545],
       [ 0.80576177, -0.09452019, -0.46691358],
       [-0.41002054, -0.63513911,  0.80849591],
       [ 0.80576177, -0.01728892, -0.48343841],
       [ 0.80576177, -0.09452019, -0.46391578],
       [ 0.80576177, -0.09452019, -0.46974808],
       [ 0.80576177,  1.21841146, -0.3394119 ],
       [ 0.80576177, -1.02129548,  0.04786783],
       [ 0.80576177, -0.78960166, -0.46181033],
       [ 0.80576177, -0.48067656, -0.44107264],
       [ 0.80576177, -0.40344529, -0.48335676],
       [-1.62580285,  2.22241801,  1.58176062],
       [ 0.80576177, -1.87083949, -0.24601552],
       [-1.62580285,  1.75903037,  1.19731538],
       [ 0.80576177,  0.83225509, -0.07801247],
       [-1.62580285, -1.40745185,  1.71250117],
       [ 0.80576177,  2.76303693, -0.46974808],
       [-1.62580285, -0.86683293,  0.9280579 ],
       [-0.41002054,  0.2144049 , -0.4162854 ],
       [-1.62580285,  1.60456783,  4.19162962],
       [-0.41002054,  0.44609872, -0.21215518],
       [ 0.80576177, -0.78960166, -0.4672363 ],
       [ 0.80576177, -0.63513911, -0.46926205],
       [-0.41002054, -1.2529893 , -0.24131664],
       [-0.41002054, -0.09452019, -0.11495032],
       [-1.62580285, -0.09452019, -0.11640839],
       [ 0.80576177, -0.09452019, -0.46974808],
       [-0.41002054,  2.14518674, -0.4162854 ],
       [-0.41002054, -0.63513911,  0.80849591],
       [ 0.80576177, -0.01728892, -0.46731796],
       [ 0.80576177, -0.9440642 , -0.47987294],
       [-1.62580285,  1.75903037,  0.9011652 ],
       [-0.41002054, -0.24898274, -0.11495032],
       [-1.62580285, -0.86683293,  4.48040973],
       [-1.62580285, -0.24898274, -0.03718642],
       [-1.62580285,  0.75502382,  0.99626266],
       [ 0.80576177, -0.48067656, -0.46772233],
       [ 0.80576177,  0.52332999, -0.31810849],
       [ 0.80576177,  0.09855799, -0.46974808],
       [-1.62580285, -0.55790784,  0.34191255],
       [-0.41002054,  0.67779254, -0.36768297],
       [ 0.80576177,  0.90948636, -0.22746495],
       [ 0.80576177, -1.02129548,  0.15114801],
       [-0.41002054, -0.01728892, -0.4162854 ],
       [-1.62580285,  0.83225509,  1.99439528],
       [ 0.80576177, -0.09452019, -0.46999109],
       [-1.62580285,  2.06795547, -0.02365939],
       [-1.62580285,  3.22642457,  0.34199421],
       [-1.62580285,  0.13717363,  1.58176062],
       [-1.62580285,  0.05994235,  0.48634343],
       [-1.62580285,  0.67779254, -0.62041562],
       [ 0.80576177, -0.09452019, -0.47946856],
       [ 0.80576177, -1.56191439, -0.22138964],
       [ 0.80576177, -1.56191439, -0.01239918],
       [-1.62580285,  2.45411184,  0.00793219],
       [ 0.80576177, -0.09452019, -0.47015245],
       [ 0.80576177, -0.09452019, -0.46691358],
       [ 0.80576177, -0.09452019, -0.46772233],
       [-1.62580285,  1.45010528,  0.39051499],
       [ 0.80576177,  1.21841146, -0.46391578],
       [-0.41002054,  0.52332999, -0.36768297],
       [ 0.80576177, -0.17175147, -0.46691358],
       [-1.62580285,  2.68580566, -0.11495032],
       [ 0.80576177,  0.44609872, -0.48189869],
       [-1.62580285, -0.78960166,  1.15025267],
       [ 0.80576177,  0.67779254, -0.48335676],
       [ 0.80576177,  0.09855799, -0.46391578],
       [ 0.80576177, -0.32621401, -0.46926205],
       [-0.41002054,  0.83225509,  0.13778234],
       [-1.62580285,  1.372874  ,  0.12806185],
       [ 0.80576177,  0.05994235, -0.43572637],
       [-1.62580285,  0.83225509, -0.01774545],
       [-1.62580285, -0.09452019,  0.39051499],
       [ 0.80576177, -0.67375475, -0.47946856],
       [-1.62580285, -0.09452019,  1.11185675],
       [-1.62580285,  0.52332999, -0.10936104],
       [-1.62580285, -0.09452019,  3.69118787],
       [ 0.80576177, -0.71237038, -0.42900369],
       [-1.62580285,  3.22642457,  0.05329575],
       [-0.41002054,  0.52332999, -0.37011309],
       [-0.41002054, -0.55790784, -0.0566274 ],
       [ 0.80576177,  1.45010528,  0.04786783],
       [-0.41002054, -0.48067656, -0.39684443],
       [-1.62580285,  0.2144049 ,  0.86276928],
       [-1.62580285,  2.60857438,  0.8951696 ],
       [-0.41002054, -2.1928939 , -0.0566274 ],
       [ 0.80576177, -0.32621401, -0.47946856],
       [-1.62580285,  0.44609872, -0.10425778],
       [-1.62580285,  1.52733655, -0.11632674],
       [-1.62580285, -0.40344529,  0.91930946],
       [ 0.80576177, -0.09452019, -0.3393322 ],
       [ 0.80576177, -0.63513911, -0.46391578],
       [ 0.80576177, -0.09452019, -0.4672363 ],
       [ 0.80576177, -0.09452019, -0.32402243],
       [-0.41002054, -0.09452019, -0.62041562],
       [ 0.80576177, -1.87083949, -0.37788948],
       [-1.62580285,  1.52733655,  0.48634343],
       [ 0.80576177, -1.09852675, -0.3394119 ],
       [-1.62580285, -0.09452019,  1.53526365],
       [ 0.80576177, -0.01728892, -0.46926205],
       [ 0.80576177,  0.98671764, -0.47363627],
       [ 0.80576177, -0.86683293, -0.2743663 ],
       [ 0.80576177, -0.63513911, -0.45646406],
       [-0.41002054,  1.14118018, -0.11495032],
       [-0.41002054, -0.09452019, -0.36768297],
       [-0.41002054,  0.60056127, -0.11495032],
       [ 0.80576177,  0.75502382, -0.05419727],
       [-0.41002054,  0.36886745,  0.01141601],
       [-0.41002054,  0.05994235, -0.36768297],
       [-0.41002054,  2.8402682 , -0.4162854 ],
       [-1.62580285, -0.09452019,  2.22809133],
       [ 0.80576177,  1.06394891, -0.46391578],
       [ 0.80576177, -0.09452019, -0.45103614],
       [ 0.80576177, -0.40344529, -0.47468997],
       [ 0.80576177, -0.86683293, -0.46885768],
       [ 0.80576177, -0.09452019, -0.15091612],
       [ 0.80576177, -0.09452019, -0.46391578],
       [ 0.80576177, -0.09452019, -0.48335676],
       [ 0.80576177, -0.09452019,  0.47791772],
       [ 0.80576177, -0.09452019, -0.46901904],
       [-0.41002054,  0.52332999, -0.11495032],
       [ 0.80576177,  0.2144049 , -0.31908053],
       [ 0.80576177, -0.44206093, -0.47987294],
       [-1.62580285, -0.09452019, -0.10425778],
       [-0.41002054,  0.75502382, -0.36768297],
       [-1.62580285, -0.09452019,  0.9770647 ],
       [ 0.80576177, -0.09452019, -0.45597804],
       [-1.62580285,  2.76303693,  0.58452035],
       [-0.41002054, -0.48067656, -0.4162854 ],
       [-1.62580285, -0.09452019,  0.38784185],
       [ 0.80576177, -0.55790784, -0.46691358],
       [ 0.80576177,  0.44609872, -0.48335676],
       [-1.62580285, -0.48067656,  0.61133139],
       [-0.41002054, -0.86683293, -0.36768297],
       [-1.62580285,  0.52332999, -0.10741694],
       [ 0.80576177, -1.56191439, -0.32402243],
       [ 0.80576177, -0.9440642 , -0.48189869],
       [ 0.80576177, -0.09452019, -0.47995459],
       [ 0.80576177,  0.67779254, -0.01021207],
       [-0.41002054, -0.9440642 , -0.4162854 ],
       [ 0.80576177, -1.94807076, -0.29575137],
       [-1.62580285,  1.25702709, -0.06634788],
       [-0.41002054, -0.48067656, -0.36768297],
       [ 0.80576177,  0.2144049 , -0.46634591],
       [ 0.80576177, -0.24898274, -0.46772233],
       [ 0.80576177, -1.79360821, -0.01239918],
       [-1.62580285, -0.40344529,  4.19162962],
       [-1.62580285,  1.21841146, -0.10425778],
       [-0.41002054, -0.01728892, -0.08149629],
       [ 0.80576177, -0.09452019, -0.46691358],
       [-1.62580285, -0.09452019,  0.06973893],
       [-0.41002054,  0.98671764, -0.36768297],
       [ 0.80576177,  0.52332999, -0.15091612],
       [-0.41002054,  0.29163617, -0.38177767],
       [ 0.80576177, -0.9440642 , -0.48327511],
       [ 0.80576177, -0.01728892, -0.43572637],
       [-0.41002054,  1.60456783, -0.11495032],
       [-1.62580285,  0.44609872,  1.12927197],
       [-1.62580285,  0.67779254,  3.80289181],
       [-0.41002054,  0.36886745, -0.36768297],
       [-1.62580285, -0.9440642 ,  0.48771985],
       [ 0.80576177, -1.40745185, -0.01239918],
       [ 0.80576177,  2.45411184, -0.49915255],
       [ 0.80576177,  0.05994235, -0.45200819],
       [-0.41002054, -1.71637694, -0.11009007],
       [ 0.80576177,  2.60857438, -0.43402529],
       [ 0.80576177, -0.71237038, -0.47987294],
       [ 0.80576177, -0.09452019, -0.18574851],
       [ 0.80576177, -0.01728892, -0.43605104],
       [-1.62580285,  0.52332999,  1.71250117],
       [ 0.80576177, -0.09452019, -0.3393322 ],
       [ 0.80576177,  1.60456783, -0.46391578],
       [-1.62580285, -0.17175147,  3.49135022],
       [ 0.80576177,  0.05994235, -0.47946856],
       [-1.62580285,  0.29163617,  1.12927197],
       [ 0.80576177, -0.09452019, -0.4702341 ],
       [ 0.80576177, -0.09452019, -0.12531819],
       [ 0.80576177, -2.10253331, -0.21069711],
       [-0.41002054, -0.32621401, -0.03718642],
       [-1.62580285,  1.6817991 ,  0.57285576],
       [-0.41002054, -0.32621401, -0.11495032],
       [ 0.80576177, -0.09452019, -0.47946856],
       [ 0.80576177, -0.09452019, -0.46691358],
       [-0.41002054, -0.40344529, -0.36768297],
       [ 0.80576177, -0.86683293, -0.22746495],
       [-1.62580285, -0.09452019, -0.02746594],
       [ 0.80576177, -0.32621401, -0.48335676],
       [-0.41002054, -0.40344529, -0.33852151],
       [ 0.80576177, -0.55790784, -0.47420395],
       [-1.62580285, -2.18594308,  2.32586387],
       [-0.41002054, -0.40344529, -0.11495032],
       [ 0.80576177, -0.24898274, -0.46634591],
       [-0.41002054,  0.36886745, -0.21215518],
       [-1.62580285, -0.63513911,  4.48040973],
       [ 0.80576177, -0.09452019, -0.46974808],
       [ 0.80576177, -0.09452019, -0.47987294],
       [ 0.80576177, -0.09452019, -0.45200819],
       [ 0.80576177, -0.55790784, -0.46926205],
       [-1.62580285,  2.53134311,  0.93486224],
       [ 0.80576177, -0.86683293, -0.42908339],
       [-1.62580285,  0.98671764,  3.80289181],
       [-0.41002054,  2.14518674, -0.3803196 ],
       [ 0.80576177, -0.78960166, -0.62041562],
       [-0.41002054,  0.98671764, -0.11495032],
       [ 0.80576177, -0.09452019, -0.47995459],
       [ 0.80576177, -0.71237038, -0.45200819],
       [ 0.80576177,  0.40748308, -0.49526435],
       [ 0.80576177, -0.09452019, -0.43572637],
       [ 0.80576177, -0.09452019, -0.46391578],
       [ 0.80576177, -0.48067656, -0.46691358],
       [ 0.80576177, -0.55790784, -0.47946856],
       [-1.62580285,  1.75903037, -0.02746594],
       [ 0.80576177,  0.05994235, -0.37788948],
       [-0.41002054,  0.56194563, -0.11495032],
       [ 0.80576177, -0.09452019, -0.46974808],
       [ 0.80576177, -0.55790784, -0.47987294],
       [-1.62580285,  1.60456783,  1.97787045],
       [ 0.80576177, -0.17175147, -0.48481483],
       [ 0.80576177, -0.55790784, -0.46391578],
       [-1.62580285,  1.6817991 ,  0.8951696 ],
       [-0.41002054,  0.52332999, -0.4162854 ],
       [-0.41002054, -0.01728892, -0.11495032],
       [-1.62580285, -0.55790784,  2.32586387],
       [-1.62580285,  1.60456783,  1.44858996],
       [-0.41002054,  0.83225509, -0.36768297],
       [ 0.80576177, -0.17175147, -0.45200819],
       [-1.62580285, -0.09452019, -0.62041562],
       [-1.62580285,  2.76303693, -0.10425778],
       [ 0.80576177, -0.9440642 , -0.45200819],
       [-1.62580285, -0.09452019, -0.10425778],
       [-1.62580285, -1.94807076,  0.9709894 ],
       [ 0.80576177, -0.09452019, -0.46691358],
       [ 0.80576177, -2.17976458, -0.40397343],
       [-0.41002054,  0.52332999, -0.08092861],
       [-0.41002054,  1.06394891, -0.11009007],
       [-1.62580285,  0.67779254,  2.36304473],
       [-0.41002054,  0.13717363, -0.11009007],
       [ 0.80576177, -0.01728892, -0.46391578],
       [ 0.80576177, -0.86683293, -0.45905554],
       [-0.41002054, -0.09452019, -0.32782897],
       [-1.62580285,  0.75502382,  1.53526365],
       [-0.41002054,  0.75502382, -0.36768297],
       [ 0.80576177, -0.24898274, -0.45200819],
       [ 0.80576177, -0.71237038, -0.48335676],
       [-1.62580285, -0.09452019,  1.97787045],
       [ 0.80576177,  1.52733655, -0.62041562],
       [-0.41002054, -0.48067656, -0.32791062],
       [ 0.80576177, -2.17976458,  0.15114801],
       [ 0.80576177, -0.09452019, -0.4672363 ],
       [ 0.80576177, -0.09452019, -0.1645248 ],
       [-0.41002054, -2.02530203, -0.11495032],
       [ 0.80576177, -1.94807076, -0.40397343],
       [ 0.80576177, -0.78960166, -0.47169217],
       [ 0.80576177,  0.87087073, -0.46974808],
       [ 0.80576177, -2.17976458, -0.31438165],
       [ 0.80576177, -0.09452019, -0.32402243],
       [ 0.80576177, -0.63513911, -0.46634591]])
In [ ]:
### Model Building
## fit() for training and predict for test
In [13]:
from sklearn.linear_model import LogisticRegression
classification=LogisticRegression()
In [14]:
classification.fit(X_train_scaled,y_train)
Out[14]:
LogisticRegression()
In [15]:
classification.predict(X_test_scaled)
Out[15]:
array([0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 1,
       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0,
       0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0,
       1, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1,
       1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1,
       1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,
       0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0,
       0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0,
       1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0,
       0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0,
       1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
       0, 0, 1, 0, 0, 0, 0, 0, 0], dtype=int64)
In [ ]:
 
In [ ]:
 
In [21]:
df_scaled=df_scaled.transform(df)
In [23]:
df_scaled
Out[23]:
array([[-0.78927234,  0.82737724, -0.56573646, -0.50244517],
       [ 1.2669898 , -1.56610693,  0.66386103,  0.78684529],
       [ 1.2669898 ,  0.82737724, -0.25833709, -0.48885426],
       ...,
       [-0.78927234,  0.82737724, -0.1046374 , -0.17626324],
       [ 1.2669898 , -1.56610693, -0.25833709, -0.04438104],
       [-0.78927234,  0.82737724,  0.20276197, -0.49237783]])
In [10]:
import matplotlib.pyplot as plt
%matplotlib inline
In [16]:
df_scaled
Out[16]:
array([[-0.78927234,  0.82737724, -0.56573646, -0.50244517],
       [ 1.2669898 , -1.56610693,  0.66386103,  0.78684529],
       [ 1.2669898 ,  0.82737724, -0.25833709, -0.48885426],
       ...,
       [-0.78927234,  0.82737724, -0.1046374 , -0.17626324],
       [ 1.2669898 , -1.56610693, -0.25833709, -0.04438104],
       [-0.78927234,  0.82737724,  0.20276197, -0.49237783]])
In [11]:
plt.hist(df_scaled[:,1],bins=20)
Out[11]:
(array([216.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 184.,
          0.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 491.]),
 array([-1.56610693, -1.44643272, -1.32675851, -1.2070843 , -1.08741009,
        -0.96773588, -0.84806167, -0.72838747, -0.60871326, -0.48903905,
        -0.36936484, -0.24969063, -0.13001642, -0.01034222,  0.10933199,
         0.2290062 ,  0.34868041,  0.46835462,  0.58802883,  0.70770304,
         0.82737724]),
 <a list of 20 Patch objects>)

In [13]:
plt.hist(df_scaled[:,2],bins=20)
Out[13]:
(array([ 40.,  14.,  15.,  31.,  79.,  98., 262.,  84.,  73.,  45.,  35.,
         35.,  29.,  16.,  13.,  11.,   4.,   5.,   1.,   1.]),
 array([-2.22415608, -1.91837055, -1.61258503, -1.3067995 , -1.00101397,
        -0.69522845, -0.38944292, -0.08365739,  0.22212813,  0.52791366,
         0.83369919,  1.13948471,  1.44527024,  1.75105577,  2.05684129,
         2.36262682,  2.66841235,  2.97419787,  3.2799834 ,  3.58576892,
         3.89155445]),
 <a list of 20 Patch objects>)

In [14]:
plt.hist(df_scaled[:,3],bins=20)
Out[14]:
(array([562., 170.,  67.,  39.,  15.,  16.,   2.,   0.,   9.,   2.,   6.,
          0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   3.]),
 array([-0.64842165, -0.13264224,  0.38313716,  0.89891657,  1.41469598,
         1.93047539,  2.4462548 ,  2.96203421,  3.47781362,  3.99359303,
         4.50937244,  5.02515184,  5.54093125,  6.05671066,  6.57249007,
         7.08826948,  7.60404889,  8.1198283 ,  8.63560771,  9.15138712,
         9.66716653]),
 <a list of 20 Patch objects>)

In [15]:
plt.hist(df['Fare'],bins=20)
Out[15]:
(array([562., 170.,  67.,  39.,  15.,  16.,   2.,   0.,   9.,   2.,   6.,
          0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   3.]),
 array([  0.     ,  25.61646,  51.23292,  76.84938, 102.46584, 128.0823 ,
        153.69876, 179.31522, 204.93168, 230.54814, 256.1646 , 281.78106,
        307.39752, 333.01398, 358.63044, 384.2469 , 409.86336, 435.47982,
        461.09628, 486.71274, 512.3292 ]),
 <a list of 20 Patch objects>)

Min Max Scaling (### CNN)---Deep Learning Techniques

Min Max Scaling scales the values between 0 to 1. X_scaled = (X - X.min / (X.max - X.min)

In [16]:
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)
In [18]:
from sklearn.preprocessing import MinMaxScaler
min_max=MinMaxScaler()
df_minmax=pd.DataFrame(min_max.fit_transform(X_train))
df_minmax.head()
Out[18]:
0	1	2
0	0.0	0.673285	0.101229
1	1.0	0.346569	0.030254
2	0.5	0.308872	0.081157
3	1.0	0.321438	0.028213
4	1.0	0.271174	0.020527
In [28]:
sns.pairplot(df_minmax)
Out[28]:
<seaborn.axisgrid.PairGrid at 0x1e3c6d5ebb0>

In [18]:
plt.hist(df_minmax['Pclass'],bins=20)
Out[18]:
(array([216.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 184.,
          0.,   0.,   0.,   0.,   0.,   0.,   0.,   0., 491.]),
 array([0.  , 0.05, 0.1 , 0.15, 0.2 , 0.25, 0.3 , 0.35, 0.4 , 0.45, 0.5 ,
        0.55, 0.6 , 0.65, 0.7 , 0.75, 0.8 , 0.85, 0.9 , 0.95, 1.  ]),
 <a list of 20 Patch objects>)

In [19]:
plt.hist(df_minmax['Age'],bins=20)
Out[19]:
(array([ 40.,  14.,  15.,  31.,  79.,  98., 262.,  84.,  73.,  45.,  35.,
         35.,  29.,  16.,  13.,  11.,   4.,   5.,   1.,   1.]),
 array([0.  , 0.05, 0.1 , 0.15, 0.2 , 0.25, 0.3 , 0.35, 0.4 , 0.45, 0.5 ,
        0.55, 0.6 , 0.65, 0.7 , 0.75, 0.8 , 0.85, 0.9 , 0.95, 1.  ]),
 <a list of 20 Patch objects>)

In [20]:
plt.hist(df_minmax['Fare'],bins=20)
Out[20]:
(array([562., 170.,  67.,  39.,  15.,  16.,   2.,   0.,   9.,   2.,   6.,
          0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   3.]),
 array([0.  , 0.05, 0.1 , 0.15, 0.2 , 0.25, 0.3 , 0.35, 0.4 , 0.45, 0.5 ,
        0.55, 0.6 , 0.65, 0.7 , 0.75, 0.8 , 0.85, 0.9 , 0.95, 1.  ]),
 <a list of 20 Patch objects>)

Robust Scaler

Robust Scaler are robust to outliers.It is used to scale the feature to median and quantiles Scaling using median and quantiles consists of substracting the median to all the observations, and then dividing by the interquantile difference. The interquantile difference is the difference between the 75th and 25th quantile:

IQR = 75th quantile - 25th quantile

X_scaled = (X - X.median) / IQR

0,1,2,3,4,5,6,7,8,9,10

9-90 percentile---90% of all values in this group is less than 9 1-10 precentile---10% of all values in this group is less than 1 4-40%

In [19]:
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)
In [20]:
from sklearn.preprocessing import RobustScaler
scaler=RobustScaler()
df_robust_scaler=pd.DataFrame(scaler.fit_transform(X_train))
df_robust_scaler.head()
Out[20]:
0	1	2
0	-2.0	2.000000	1.602069
1	0.0	0.000000	0.044788
2	-1.0	-0.230769	1.161670
3	0.0	-0.153846	0.000000
4	0.0	-0.461538	-0.168630
In [21]:
scaler.transform(X_test)
Out[21]:
array([[ 0.00000000e+00,  0.00000000e+00,  3.39014989e-02],
       [-1.00000000e+00,  2.30769231e-01, -1.69344754e-01],
       [ 0.00000000e+00, -6.15384615e-01, -2.79623126e-01],
       [-1.00000000e+00, -1.69230769e+00,  7.94252677e-01],
       [ 0.00000000e+00, -1.07692308e+00, -1.37580300e-01],
       [-2.00000000e+00, -1.53846154e-01,  2.75785011e+00],
       [ 0.00000000e+00,  0.00000000e+00, -2.87117773e-01],
       [ 0.00000000e+00, -9.23076923e-01,  1.51854390e-01],
       [ 0.00000000e+00, -9.23076923e-01, -2.87117773e-01],
       [-2.00000000e+00, -6.92307692e-01,  5.06599572e-01],
       [-2.00000000e+00,  6.92307692e-01,  1.65506638e+00],
       [ 0.00000000e+00,  1.23076923e+00, -2.74269807e-01],
       [ 0.00000000e+00,  0.00000000e+00,  4.71627409e-01],
       [ 0.00000000e+00,  1.53846154e-01, -3.09601713e-01],
       [-1.00000000e+00,  6.15384615e-01, -6.22783726e-02],
       [-2.00000000e+00, -9.23076923e-01,  1.06834261e+00],
       [-2.00000000e+00,  1.07692308e+00,  1.63169165e+00],
       [ 0.00000000e+00,  0.00000000e+00, -2.83725910e-01],
       [-1.00000000e+00, -7.69230769e-02, -6.22783726e-02],
       [-2.00000000e+00,  1.46153846e+00,  1.60795717e+00],
       [ 0.00000000e+00, -3.07692308e-01, -2.80873662e-01],
       [-2.00000000e+00,  4.61538462e-01,  5.18021413e-01],
       [ 0.00000000e+00, -6.92307692e-01, -2.82655246e-01],
       [ 0.00000000e+00, -6.15384615e-01, -2.23948608e-01],
       [ 0.00000000e+00,  0.00000000e+00,  1.96145610e-03],
       [ 0.00000000e+00, -1.38461538e+00,  5.75837259e-01],
       [-2.00000000e+00,  9.23076923e-01,  5.68162741e-01],
       [-1.00000000e+00,  2.30769231e-01, -6.22783726e-02],
       [ 0.00000000e+00, -1.84615385e+00,  5.75837259e-01],
       [ 0.00000000e+00,  2.30769231e-01, -2.82655246e-01],
       [ 0.00000000e+00, -6.92307692e-01, -2.80873662e-01],
       [ 0.00000000e+00, -4.61538462e-01, -2.87117773e-01],
       [-2.00000000e+00,  0.00000000e+00,  6.95571734e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.95683084e-01],
       [ 0.00000000e+00, -7.69230769e-01, -2.74269807e-01],
       [ 0.00000000e+00, -7.69230769e-02,  0.00000000e+00],
       [-2.00000000e+00,  0.00000000e+00,  9.01319058e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.87117773e-01],
       [-2.00000000e+00,  1.53846154e-01,  7.08599572e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.80873662e-01],
       [-1.00000000e+00, -5.38461538e-01,  2.52872805e+00],
       [ 0.00000000e+00,  7.69230769e-02, -3.17276231e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.74269807e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.87117773e-01],
       [ 0.00000000e+00,  1.30769231e+00,  0.00000000e+00],
       [ 0.00000000e+00, -9.23076923e-01,  8.53139186e-01],
       [ 0.00000000e+00, -6.92307692e-01, -2.69631692e-01],
       [ 0.00000000e+00, -3.84615385e-01, -2.23948608e-01],
       [ 0.00000000e+00, -3.07692308e-01, -3.17096360e-01],
       [-2.00000000e+00,  2.30769231e+00,  4.23215418e+00],
       [ 0.00000000e+00, -1.76923077e+00,  2.05743041e-01],
       [-2.00000000e+00,  1.84615385e+00,  3.38525910e+00],
       [ 0.00000000e+00,  9.23076923e-01,  5.75837259e-01],
       [-2.00000000e+00, -1.30769231e+00,  4.52016274e+00],
       [ 0.00000000e+00,  2.84615385e+00, -2.87117773e-01],
       [-2.00000000e+00, -7.69230769e-01,  2.79211135e+00],
       [-1.00000000e+00,  3.07692308e-01, -1.69344754e-01],
       [-2.00000000e+00,  1.69230769e+00,  9.98143897e+00],
       [-1.00000000e+00,  5.38461538e-01,  2.80334047e-01],
       [ 0.00000000e+00, -6.92307692e-01, -2.81584582e-01],
       [ 0.00000000e+00, -5.38461538e-01, -2.86047109e-01],
       [-1.00000000e+00, -1.15384615e+00,  2.16094218e-01],
       [-1.00000000e+00,  0.00000000e+00,  4.94466809e-01],
       [-2.00000000e+00,  0.00000000e+00,  4.91254818e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.87117773e-01],
       [-1.00000000e+00,  2.23076923e+00, -1.69344754e-01],
       [-1.00000000e+00, -5.38461538e-01,  2.52872805e+00],
       [ 0.00000000e+00,  7.69230769e-02, -2.81764454e-01],
       [ 0.00000000e+00, -8.46153846e-01, -3.09421842e-01],
       [-2.00000000e+00,  1.84615385e+00,  2.73286938e+00],
       [-1.00000000e+00, -1.53846154e-01,  4.94466809e-01],
       [-2.00000000e+00, -7.69230769e-01,  1.06175931e+01],
       [-2.00000000e+00, -1.53846154e-01,  6.65773019e-01],
       [-2.00000000e+00,  8.46153846e-01,  2.94235974e+00],
       [ 0.00000000e+00, -3.84615385e-01, -2.82655246e-01],
       [ 0.00000000e+00,  6.15384615e-01,  4.69293362e-02],
       [ 0.00000000e+00,  1.92307692e-01, -2.87117773e-01],
       [-2.00000000e+00, -4.61538462e-01,  1.50089079e+00],
       [-1.00000000e+00,  7.69230769e-01, -6.22783726e-02],
       [ 0.00000000e+00,  1.00000000e+00,  2.46608137e-01],
       [ 0.00000000e+00, -9.23076923e-01,  1.08065525e+00],
       [-1.00000000e+00,  7.69230769e-02, -1.69344754e-01],
       [-2.00000000e+00,  9.23076923e-01,  5.14114775e+00],
       [ 0.00000000e+00,  0.00000000e+00, -2.87653105e-01],
       [-2.00000000e+00,  2.15384615e+00,  6.95571734e-01],
       [-2.00000000e+00,  3.30769231e+00,  1.50107066e+00],
       [-2.00000000e+00,  2.30769231e-01,  4.23215418e+00],
       [-2.00000000e+00,  1.53846154e-01,  1.81905782e+00],
       [-2.00000000e+00,  7.69230769e-01, -6.19023555e-01],
       [ 0.00000000e+00,  0.00000000e+00, -3.08531049e-01],
       [ 0.00000000e+00, -1.46153846e+00,  2.59991435e-01],
       [ 0.00000000e+00, -1.46153846e+00,  7.20376874e-01],
       [-2.00000000e+00,  2.53846154e+00,  7.65164882e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.88008565e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.80873662e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.82655246e-01],
       [-2.00000000e+00,  1.53846154e+00,  1.60795717e+00],
       [ 0.00000000e+00,  1.30769231e+00, -2.74269807e-01],
       [-1.00000000e+00,  6.15384615e-01, -6.22783726e-02],
       [ 0.00000000e+00, -7.69230769e-02, -2.80873662e-01],
       [-2.00000000e+00,  2.76923077e+00,  4.94466809e-01],
       [ 0.00000000e+00,  5.38461538e-01, -3.13884368e-01],
       [-2.00000000e+00, -6.92307692e-01,  3.28158458e+00],
       [ 0.00000000e+00,  7.69230769e-01, -3.17096360e-01],
       [ 0.00000000e+00,  1.92307692e-01, -2.74269807e-01],
       [ 0.00000000e+00, -2.30769231e-01, -2.86047109e-01],
       [-1.00000000e+00,  9.23076923e-01,  1.05121199e+00],
       [-2.00000000e+00,  1.46153846e+00,  1.02979872e+00],
       [ 0.00000000e+00,  1.53846154e-01, -2.12171306e-01],
       [-2.00000000e+00,  9.23076923e-01,  7.08599572e-01],
       [-2.00000000e+00,  0.00000000e+00,  1.60795717e+00],
       [ 0.00000000e+00, -5.76923077e-01, -3.08531049e-01],
       [-2.00000000e+00,  0.00000000e+00,  3.19700214e+00],
       [-2.00000000e+00,  6.15384615e-01,  5.06779443e-01],
       [-2.00000000e+00,  0.00000000e+00,  8.87901499e+00],
       [ 0.00000000e+00, -6.15384615e-01, -1.97361884e-01],
       [-2.00000000e+00,  3.30769231e+00,  8.65096360e-01],
       [-1.00000000e+00,  6.15384615e-01, -6.76316916e-02],
       [-1.00000000e+00, -4.61538462e-01,  6.22946467e-01],
       [ 0.00000000e+00,  1.53846154e+00,  8.53139186e-01],
       [-1.00000000e+00, -3.84615385e-01, -1.26518201e-01],
       [-2.00000000e+00,  3.07692308e-01,  2.64828694e+00],
       [-2.00000000e+00,  2.69230769e+00,  2.71966167e+00],
       [-1.00000000e+00, -2.09000000e+00,  6.22946467e-01],
       [ 0.00000000e+00, -2.30769231e-01, -3.08531049e-01],
       [-2.00000000e+00,  5.38461538e-01,  5.18021413e-01],
       [-2.00000000e+00,  1.61538462e+00,  4.91434690e-01],
       [-2.00000000e+00, -3.07692308e-01,  2.77283940e+00],
       [ 0.00000000e+00,  0.00000000e+00,  1.75588865e-04],
       [ 0.00000000e+00, -5.38461538e-01, -2.74269807e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.81584582e-01],
       [ 0.00000000e+00,  0.00000000e+00,  3.39014989e-02],
       [-1.00000000e+00,  0.00000000e+00, -6.19023555e-01],
       [ 0.00000000e+00, -1.76923077e+00, -8.47623126e-02],
       [-2.00000000e+00,  1.61538462e+00,  1.81905782e+00],
       [ 0.00000000e+00, -1.00000000e+00,  0.00000000e+00],
       [-2.00000000e+00,  0.00000000e+00,  4.12972591e+00],
       [ 0.00000000e+00,  7.69230769e-02, -2.86047109e-01],
       [ 0.00000000e+00,  1.07692308e+00, -2.95683084e-01],
       [ 0.00000000e+00, -7.69230769e-01,  1.43289079e-01],
       [ 0.00000000e+00, -5.38461538e-01, -2.57854390e-01],
       [-1.00000000e+00,  1.23076923e+00,  4.94466809e-01],
       [-1.00000000e+00,  0.00000000e+00, -6.22783726e-02],
       [-1.00000000e+00,  6.92307692e-01,  4.94466809e-01],
       [ 0.00000000e+00,  8.46153846e-01,  6.28299786e-01],
       [-1.00000000e+00,  4.61538462e-01,  7.72839400e-01],
       [-1.00000000e+00,  1.53846154e-01, -6.22783726e-02],
       [-1.00000000e+00,  2.92307692e+00, -1.69344754e-01],
       [-2.00000000e+00,  0.00000000e+00,  5.65595717e+00],
       [ 0.00000000e+00,  1.15384615e+00, -2.74269807e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.45897216e-01],
       [ 0.00000000e+00, -3.07692308e-01, -2.98004283e-01],
       [ 0.00000000e+00, -7.69230769e-01, -2.85156317e-01],
       [ 0.00000000e+00,  0.00000000e+00,  4.15237687e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.74269807e-01],
       [ 0.00000000e+00,  0.00000000e+00, -3.17096360e-01],
       [ 0.00000000e+00,  0.00000000e+00,  1.80049679e+00],
       [ 0.00000000e+00,  0.00000000e+00, -2.85511777e-01],
       [-1.00000000e+00,  6.15384615e-01,  4.94466809e-01],
       [ 0.00000000e+00,  3.07692308e-01,  4.47880086e-02],
       [ 0.00000000e+00, -3.46153846e-01, -3.09421842e-01],
       [-2.00000000e+00,  0.00000000e+00,  5.18021413e-01],
       [-1.00000000e+00,  8.46153846e-01, -6.22783726e-02],
       [-2.00000000e+00,  0.00000000e+00,  2.90006852e+00],
       [ 0.00000000e+00,  0.00000000e+00, -2.56783726e-01],
       [-2.00000000e+00,  2.84615385e+00,  2.03533191e+00],
       [-1.00000000e+00, -3.84615385e-01, -1.69344754e-01],
       [-2.00000000e+00,  0.00000000e+00,  1.60206852e+00],
       [ 0.00000000e+00, -4.61538462e-01, -2.80873662e-01],
       [ 0.00000000e+00,  5.38461538e-01, -3.17096360e-01],
       [-2.00000000e+00, -3.84615385e-01,  2.09439400e+00],
       [-1.00000000e+00, -7.69230769e-01, -6.22783726e-02],
       [-2.00000000e+00,  6.15384615e-01,  5.11062099e-01],
       [ 0.00000000e+00, -1.46153846e+00,  3.39014989e-02],
       [ 0.00000000e+00, -8.46153846e-01, -3.13884368e-01],
       [ 0.00000000e+00,  0.00000000e+00, -3.09601713e-01],
       [ 0.00000000e+00,  7.69230769e-01,  7.25194861e-01],
       [-1.00000000e+00, -8.46153846e-01, -1.69344754e-01],
       [ 0.00000000e+00, -1.84615385e+00,  9.61798715e-02],
       [-2.00000000e+00,  1.34615385e+00,  6.01533191e-01],
       [-1.00000000e+00, -3.84615385e-01, -6.22783726e-02],
       [ 0.00000000e+00,  3.07692308e-01, -2.79623126e-01],
       [ 0.00000000e+00, -1.53846154e-01, -2.82655246e-01],
       [ 0.00000000e+00, -1.69230769e+00,  7.20376874e-01],
       [-2.00000000e+00, -3.07692308e-01,  9.98143897e+00],
       [-2.00000000e+00,  1.30769231e+00,  5.18021413e-01],
       [-1.00000000e+00,  7.69230769e-02,  5.68162741e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.80873662e-01],
       [-2.00000000e+00,  0.00000000e+00,  9.01319058e-01],
       [-1.00000000e+00,  1.07692308e+00, -6.22783726e-02],
       [ 0.00000000e+00,  6.15384615e-01,  4.15237687e-01],
       [-1.00000000e+00,  3.84615385e-01, -9.33276231e-02],
       [ 0.00000000e+00, -8.46153846e-01, -3.16916488e-01],
       [ 0.00000000e+00,  7.69230769e-02, -2.12171306e-01],
       [-1.00000000e+00,  1.69230769e+00,  4.94466809e-01],
       [-2.00000000e+00,  5.38461538e-01,  3.23536617e+00],
       [-2.00000000e+00,  7.69230769e-01,  9.12508779e+00],
       [-1.00000000e+00,  4.61538462e-01, -6.22783726e-02],
       [-2.00000000e+00, -8.46153846e-01,  1.82208994e+00],
       [ 0.00000000e+00, -1.30769231e+00,  7.20376874e-01],
       [ 0.00000000e+00,  2.53846154e+00, -3.51892934e-01],
       [ 0.00000000e+00,  1.53846154e-01, -2.48038544e-01],
       [-1.00000000e+00, -1.61538462e+00,  5.05173448e-01],
       [ 0.00000000e+00,  2.69230769e+00, -2.08423983e-01],
       [ 0.00000000e+00, -6.15384615e-01, -3.09421842e-01],
       [ 0.00000000e+00,  0.00000000e+00,  3.38505353e-01],
       [ 0.00000000e+00,  7.69230769e-02, -2.12886510e-01],
       [-2.00000000e+00,  6.15384615e-01,  4.52016274e+00],
       [ 0.00000000e+00,  0.00000000e+00,  1.75588865e-04],
       [ 0.00000000e+00,  1.69230769e+00, -2.74269807e-01],
       [-2.00000000e+00, -7.69230769e-02,  8.43879229e+00],
       [ 0.00000000e+00,  1.53846154e-01, -3.08531049e-01],
       [-2.00000000e+00,  3.84615385e-01,  3.23536617e+00],
       [ 0.00000000e+00,  0.00000000e+00, -2.88188437e-01],
       [ 0.00000000e+00,  0.00000000e+00,  4.71627409e-01],
       [ 0.00000000e+00, -2.00000000e+00,  2.83546039e-01],
       [-1.00000000e+00, -2.30769231e-01,  6.65773019e-01],
       [-2.00000000e+00,  1.76923077e+00,  2.00963597e+00],
       [-1.00000000e+00, -2.30769231e-01,  4.94466809e-01],
       [ 0.00000000e+00,  0.00000000e+00, -3.08531049e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.80873662e-01],
       [-1.00000000e+00, -3.07692308e-01, -6.22783726e-02],
       [ 0.00000000e+00, -7.69230769e-01,  2.46608137e-01],
       [-2.00000000e+00,  0.00000000e+00,  6.87186296e-01],
       [ 0.00000000e+00, -2.30769231e-01, -3.17096360e-01],
       [-1.00000000e+00, -3.07692308e-01,  1.96145610e-03],
       [ 0.00000000e+00, -4.61538462e-01, -2.96933619e-01],
       [-2.00000000e+00, -2.08307692e+00,  5.87134047e+00],
       [-1.00000000e+00, -3.07692308e-01,  4.94466809e-01],
       [ 0.00000000e+00, -1.53846154e-01, -2.79623126e-01],
       [-1.00000000e+00,  4.61538462e-01,  2.80334047e-01],
       [-2.00000000e+00, -5.38461538e-01,  1.06175931e+01],
       [ 0.00000000e+00,  0.00000000e+00, -2.87117773e-01],
       [ 0.00000000e+00,  0.00000000e+00, -3.09421842e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.48038544e-01],
       [ 0.00000000e+00, -4.61538462e-01, -2.86047109e-01],
       [-2.00000000e+00,  2.61538462e+00,  2.80710064e+00],
       [ 0.00000000e+00, -7.69230769e-01, -1.97537473e-01],
       [-2.00000000e+00,  1.07692308e+00,  9.12508779e+00],
       [-1.00000000e+00,  2.23076923e+00, -9.01156317e-02],
       [ 0.00000000e+00, -6.92307692e-01, -6.19023555e-01],
       [-1.00000000e+00,  1.07692308e+00,  4.94466809e-01],
       [ 0.00000000e+00,  0.00000000e+00, -3.09601713e-01],
       [ 0.00000000e+00, -6.15384615e-01, -2.48038544e-01],
       [ 0.00000000e+00,  5.00000000e-01, -3.43327623e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.12171306e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.74269807e-01],
       [ 0.00000000e+00, -3.84615385e-01, -2.80873662e-01],
       [ 0.00000000e+00, -4.61538462e-01, -3.08531049e-01],
       [-2.00000000e+00,  1.84615385e+00,  6.87186296e-01],
       [ 0.00000000e+00,  1.53846154e-01, -8.47623126e-02],
       [-1.00000000e+00,  6.53846154e-01,  4.94466809e-01],
       [ 0.00000000e+00,  0.00000000e+00, -2.87117773e-01],
       [ 0.00000000e+00, -4.61538462e-01, -3.09421842e-01],
       [-2.00000000e+00,  1.69230769e+00,  5.10474518e+00],
       [ 0.00000000e+00, -7.69230769e-02, -3.20308351e-01],
       [ 0.00000000e+00, -4.61538462e-01, -2.74269807e-01],
       [-2.00000000e+00,  1.76923077e+00,  2.71966167e+00],
       [-1.00000000e+00,  6.15384615e-01, -1.69344754e-01],
       [-1.00000000e+00,  7.69230769e-02,  4.94466809e-01],
       [-2.00000000e+00, -4.61538462e-01,  5.87134047e+00],
       [-2.00000000e+00,  1.69230769e+00,  3.93879229e+00],
       [-1.00000000e+00,  9.23076923e-01, -6.22783726e-02],
       [ 0.00000000e+00, -7.69230769e-02, -2.48038544e-01],
       [-2.00000000e+00,  0.00000000e+00, -6.19023555e-01],
       [-2.00000000e+00,  2.84615385e+00,  5.18021413e-01],
       [ 0.00000000e+00, -8.46153846e-01, -2.48038544e-01],
       [-2.00000000e+00,  0.00000000e+00,  5.18021413e-01],
       [-2.00000000e+00, -1.84615385e+00,  2.88668522e+00],
       [ 0.00000000e+00,  0.00000000e+00, -2.80873662e-01],
       [ 0.00000000e+00, -2.07692308e+00, -1.42222698e-01],
       [-1.00000000e+00,  6.15384615e-01,  5.69413276e-01],
       [-1.00000000e+00,  1.15384615e+00,  5.05173448e-01],
       [-2.00000000e+00,  7.69230769e-01,  5.95324625e+00],
       [-1.00000000e+00,  2.30769231e-01,  5.05173448e-01],
       [ 0.00000000e+00,  7.69230769e-02, -2.74269807e-01],
       [ 0.00000000e+00, -7.69230769e-01, -2.63563169e-01],
       [-1.00000000e+00,  0.00000000e+00,  2.55160600e-02],
       [-2.00000000e+00,  8.46153846e-01,  4.12972591e+00],
       [-1.00000000e+00,  8.46153846e-01, -6.22783726e-02],
       [ 0.00000000e+00, -1.53846154e-01, -2.48038544e-01],
       [ 0.00000000e+00, -6.15384615e-01, -3.17096360e-01],
       [-2.00000000e+00,  0.00000000e+00,  5.10474518e+00],
       [ 0.00000000e+00,  1.61538462e+00, -6.19023555e-01],
       [-1.00000000e+00, -3.84615385e-01,  2.53361884e-02],
       [ 0.00000000e+00, -2.07692308e+00,  1.08065525e+00],
       [ 0.00000000e+00,  0.00000000e+00, -2.81584582e-01],
       [ 0.00000000e+00,  0.00000000e+00,  3.85259101e-01],
       [-1.00000000e+00, -1.92307692e+00,  4.94466809e-01],
       [ 0.00000000e+00, -1.84615385e+00, -1.42222698e-01],
       [ 0.00000000e+00, -6.92307692e-01, -2.91400428e-01],
       [ 0.00000000e+00,  9.61538462e-01, -2.87117773e-01],
       [ 0.00000000e+00, -2.07692308e+00,  5.51391863e-02],
       [ 0.00000000e+00,  0.00000000e+00,  3.39014989e-02],
       [ 0.00000000e+00, -5.38461538e-01, -2.79623126e-01]])
In [27]:
import seaborn as sns
sns.pairplot(df_robust_scaler)
Out[27]:
<seaborn.axisgrid.PairGrid at 0x1e3c4e20100>

In [26]:
import seaborn as sns
sns.pairplot(df)
Out[26]:
<seaborn.axisgrid.PairGrid at 0x1e3bfc1f280>

In [23]:
plt.hist(df_robust_scaler['Age'],bins=20)
Out[23]:
(array([ 40.,  14.,  15.,  31.,  79.,  98., 262.,  84.,  73.,  45.,  35.,
         35.,  29.,  16.,  13.,  11.,   4.,   5.,   1.,   1.]),
 array([-2.12153846, -1.81546154, -1.50938462, -1.20330769, -0.89723077,
        -0.59115385, -0.28507692,  0.021     ,  0.32707692,  0.63315385,
         0.93923077,  1.24530769,  1.55138462,  1.85746154,  2.16353846,
         2.46961538,  2.77569231,  3.08176923,  3.38784615,  3.69392308,
         4.        ]),
 <a list of 20 Patch objects>)

In [24]:
plt.hist(df_robust_scaler['Fare'],bins=20)
Out[24]:
(array([562., 170.,  67.,  39.,  15.,  16.,   2.,   0.,   9.,   2.,   6.,
          0.,   0.,   0.,   0.,   0.,   0.,   0.,   0.,   3.]),
 array([-0.62600478,  0.48343237,  1.59286952,  2.70230667,  3.81174382,
         4.92118096,  6.03061811,  7.14005526,  8.24949241,  9.35892956,
        10.46836671, 11.57780386, 12.68724101, 13.79667816, 14.90611531,
        16.01555246, 17.12498961, 18.23442675, 19.3438639 , 20.45330105,
        21.5627382 ]),
 <a list of 20 Patch objects>)

Guassian Transformation

Some machine learning algorithms like linear and logistic assume that the features are normally distributed -Accuracy -Performance

logarithmic transformation
reciprocal transformation
square root transformation
exponential transformation (more general, you can use any exponent)
boxcox transformation
In [22]:
df=pd.read_csv('titanic.csv',usecols=['Age','Fare','Survived'])
df.head()
Out[22]:
Survived	Age	Fare
0	0	22.0	7.2500
1	1	38.0	71.2833
2	1	26.0	7.9250
3	1	35.0	53.1000
4	0	35.0	8.0500
In [23]:
### fillnan
df['Age']=df['Age'].fillna(df['Age'].median())
In [24]:
df.isnull().sum()
Out[24]:
Survived    0
Age         0
Fare        0
dtype: int64
In [29]:
import matplotlib.pyplot as plt
In [28]:
import scipy.stats as stat
import pylab 
In [26]:
#### If you want to check whether feature is guassian or normal distributed
#### Q-Q plot
def plot_data(df,feature):
    plt.figure(figsize=(10,6))
    plt.subplot(1,2,1)
    df[feature].hist()
    plt.subplot(1,2,2)
    stat.probplot(df[feature],dist='norm',plot=pylab)
    plt.show()
    
In [30]:
plot_data(df,'Age')

Logarithmic Transformation
In [31]:
import numpy as np
df['Age_log']=np.log(df['Age'])
plot_data(df,'Age_log')

Reciprocal Trnasformation
In [33]:
df['Age_reciprocal']=1/df.Age
plot_data(df,'Age_reciprocal')

In [34]:
##### Square Root Transformation
df['Age_sqaure']=df.Age**(1/2)
plot_data(df,'Age_sqaure')

In [35]:
#### Exponential Transdormation
df['Age_exponential']=df.Age**(1/1.2)
plot_data(df,'Age_exponential')

BoxCOx Transformation

The Box-Cox transformation is defined as:

T(Y)=(Y exp(λ)−1)/λ

where Y is the response variable and λ is the transformation parameter. λ varies from -5 to 5. In the transformation, all values of λ are considered and the optimal value for a given variable is selected.

In [46]:
df['Age_Boxcox'],parameters=stat.boxcox(df['Age'])
In [48]:
print(parameters)
0.7964531473656952
In [49]:
plot_data(df,'Age_Boxcox')

In [51]:
plot_data(df,'Fare')

In [50]:
#### Fare
df['Fare_log']=np.log1p(df['Fare'])
plot_data(df,'Fare_log')

In [53]:
df['Fare_Boxcox'],parameters=stat.boxcox(df['Fare']+1)
plot_data(df,'Fare_Boxcox')
